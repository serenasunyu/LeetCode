name: Update LeetCode Solutions

on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  update-solutions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20' # Update to the latest LTS version

      - name: Install npm-check-updates locally
        run: npm install --save-dev npm-check-updates

      - name: Update dependencies
        run: |
          npx npm-check-updates -u
          npm install

      - name: Install LeetCode CLI
        run: npm install -g leetcode-cli

      - name: Check LeetCode CLI Installation
        run: leetcode version

      - name: Login to LeetCode
        id: login
        run: |
          leetcode user -l -u ${{ secrets.LEETCODE_USERNAME }} -p ${{ secrets.LEETCODE_PASSWORD }}
          echo "Login successful."

      - name: Debug Raw Output
        run: |
          raw_output=$(leetcode list -q -t -l -g -o json)
          echo "Raw output: $raw_output"

      - name: Fetch Solved Problems for Today
        id: fetch-today-problems
        run: |
          today=$(date +'%Y-%m-%d')
          solved_problems=$(leetcode list -q -t -l -g -o json | jq -r --arg today "$today" '[.[] | select(.ac_date | startswith($today)) | .id]')
          echo "Solved problems: $solved_problems"
          echo "::set-output name=solved_problems::$solved_problems"
        continue-on-error: true # Continue even if leetcode list command fails

       - name: Retry Login if Session Expired
        if: ${{ failure() && steps.login.outputs.exit-status == '1' }}
        run: |
          echo "Session expired. Retrying login..."
          leetcode user -l -u ${{ secrets.LEETCODE_USERNAME }} -p ${{ secrets.LEETCODE_PASSWORD }}
          echo "Login successful."

      - name: Fetch and Save Solutions
        run: |
          mkdir -p leetcode_solutions
          cd leetcode_solutions
          for problem_id in $(echo ${{ steps.fetch-today-problems.outputs.solved_problems }} | jq -r '.[]'); do
            leetcode show $problem_id -gx -l cpp
          done
        env:
          LEETCODE_USERNAME: ${{ secrets.LEETCODE_USERNAME }}
          LEETCODE_PASSWORD: ${{ secrets.LEETCODE_PASSWORD }}

      - name: Commit and Push
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "Update LeetCode solutions for $(date +'%Y-%m-%d')" || echo "No changes to commit"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
